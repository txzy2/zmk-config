/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&kp TAB         &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &lt 3 SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                              &kp LGUI  &mo 2  &kp SPACE    &kp ENTER  &mo 1  &kp LCTRL
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&kp GRAVE             &kp EXCLAMATION  &kp AT_SIGN       &kp HASH  &kp DOLLAR         &kp PERCENT        &kp CARET       &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp TILDE             &none            &kp LA(LC(LEFT))  &kp DEL   &kp LA(LC(RIGHT))  &kp PRINTSCREEN    &kp MINUS       &kp EQUAL      &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &bt BT_SEL 0
&kp NON_US_BACKSLASH  &kp F1           &kp F2            &kp F3    &kp F4             &kp F5             &kp UNDERSCORE  &kp QUESTION   &kp PLUS           &kp COLON             &kp SLASH              &bt BT_CLR_ALL
                                                         &kp LGUI  &trans             &kp SPACE          &kp ENTER       &trans         &kp LCTRL
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&kp ESCAPE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp N5          &kp NUMBER_6  &kp N7     &kp N8          &kp N9     &kp N0        &kp BACKSPACE
&kp TAB     &kp F1        &kp LC(S)     &kp LC(Z)     &kp LC(C)      &kp LC(V)       &kp C_VOL_UP  &kp LEFT   &kp UP_ARROW    &kp RIGHT  &kp C_BRI_UP  &bt BT_SEL 1
&kp CAPS    &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp LG(SPACE)  &kp DEL         &kp C_VOL_DN  &kp LC(Z)  &kp DOWN_ARROW  &none      &kp C_BRI_DN  &none
                                        &kp LGUI      &none          &tp LALT RET    &kp LEFT_ALT  &none      &none
            >;
        };
    };
};
